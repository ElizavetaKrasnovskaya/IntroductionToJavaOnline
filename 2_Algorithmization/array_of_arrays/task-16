package by.jonline.arrayofarrays16.main;

import java.util.Scanner;

public class Main{

    public static void main(String args[]){
    
        Scanner console = new Scanner (System.in);
        
        System.out.print("Enter size of matrix:  ");
        int size = console.nextInt();
        
        int[][] matrix = new int[size][size];
        
        if(size%2!=0) {
        
            System.out.println("Magic square: ");
            oddMagicSquare(size);
            
        }else if ((size % 4 != 0) || (size==0) || (size==2)){
        
            System.out.print("A magic square can't be made up. Enter a different number");
            
        }else if(size%4==0){
        
            generateArray(matrix);
            System.out.println("Magic square ");
            reverseArray1(matrix);
            reverseArray2(matrix);
            printArray(matrix);
            
        }
    }

    public static void printArray(int[][] matrix) {
    
        for (int i = 0; i < matrix.length; i++) {
        
            for (int j = 0; j < matrix.length; j++) {
            
                System.out.print(matrix[i][j] + "\t");
                
            }
            
            System.out.println();
            
        }
    }

    public static void oddMagicSquare(int n) {
    
        int[][] matrix = new int[n][n];
        int x = n/2;
        int y = matrix.length-1;
        int count = 1;
        
        while (true){
        
            matrix[(matrix.length-1)-y][x] = count;
            count++;
            
            if(x==matrix.length-1) x=-1;
            
            if(y>=matrix.length-1) y=-1;
            
            y++;
            x++;
            if (matrix[matrix.length-1-y][x] != 0) y--;
            
            int count1=0;
            
            for (int[] array:matrix) {
            
                for (int z :array) {
                
                    if(z == 0) count1++;
                    
                }
            }
            
            if (count1==0) break;
            
        }
        
        printArray(matrix);
        
    }

    public static void generateArray(int matrix[][]){
    
        int k = 1;
        
        for (int i = 0; i < matrix.length; i++) {
        
            for (int j = 0; j < matrix.length; j++) {
            
                matrix[i][j] = k;
                k++;
                
            }
        }
    }

    public static void reverseArray1(int matrix[][]) {
    
        int t;
        
        for (int i = 0; i < matrix.length / 2; i++) {
        
            for (int j = 0; j < matrix.length / 2; j++) {
            
                if (i == j){
                
                    t = matrix[i][j];
                    matrix[i][j] = matrix[matrix.length - 1 - i][matrix.length - 1 - j];
                    matrix[matrix.length - 1 - i][matrix.length - 1 - j] = t;
                    
                }
            }
        }
    }

    public static void reverseArray2(int matrix[][]) {
    
        int t;
        
        for (int i = 0, j = matrix.length - 1 - i; i <= (matrix.length / 2) - 1; ++i, --j) {
        
            t = matrix[i][j];
            matrix[i][j] = matrix[j][i];
            matrix[j][i] = t;
            
        }
    }
}
